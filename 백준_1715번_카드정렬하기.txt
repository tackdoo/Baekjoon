#include <iostream>
using namespace std;

int arr[100001];

void heaptify(int value, int end) {
	arr[end] = value;
	while (end > 0) {
		int root = (end - 1) / 2;
		if (arr[root] > arr[end]) {
			int temp = arr[root];
			arr[root] = arr[end];
			arr[end] = temp;
			end = root;
		}
		else break;
	}
}

int pop(int end) {
	int value = arr[0];
	arr[0] = arr[end];
	arr[end] = 0;
	end--;
	int root = 0;
	while (root <= end) {
		int child = root * 2 + 1;
		if (child > end) break;
		if (child + 1 <= end && arr[child] > arr[child + 1]) child++;
		if (arr[child] < arr[root]) {
			int temp = arr[root];
			arr[root] = arr[child];
			arr[child] = temp;
			root = child;
		}
		else break;
	}
	return value;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	
	int N;
	cin >> N;
	for (int i = 0; i < N; i++) {
		int value;
		cin >> value;
		heaptify(value, i);
	}

	int sum = 0;
	while (true) {
		if (N == 0) break;
		if (N == 1) {
			break;
		}
		int value1 = pop(--N);
		int value2 = pop(--N);
		int value3 = value1 + value2;
		sum += value3;
		heaptify(value3, N++);
	}
	cout << sum << "\n";

}
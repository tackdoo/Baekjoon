#pragma warning(disable:4996)
#include <stdio.h>
#include <stdlib.h>

struct deque {
	int x, y;
	struct deque* next;
};

void push(struct deque* head, struct deque* tail, int x, int y) {
	struct deque* newNode = (struct deque*)malloc(sizeof(struct deque));
	newNode->x = x;
	newNode->y = y;
	newNode->next = NULL;
	if (head->next == NULL) {
		head->next = newNode;
		tail->next = newNode;
	}
	else {
		tail->next->next = newNode;
		tail->next = newNode;
	}
}

void pop(struct deque* head, struct deque* tail) {
	if (head->next == NULL) return;
	else {
		struct deque* i = head->next;
		if (head->next == tail->next) {
			head->next = NULL;
			tail->next = NULL;
		}
		else {
			head->next = head->next->next;
		}
		free(i);
		return;
	}
}

int arr[101][101];

int main()
{
	int size;
	int K;
	int turn[2][101];
	int turn_idx = 0;
	scanf("%d", &size);
	scanf("%d", &K);
	for (int i = 0; i < K; i++) {
		int x, y;
		scanf("%d %d", &x, &y);
		arr[x - 1][y - 1] = 1; //사과 =1
	}
	scanf("%d", &K);
	for (int i = 0; i < K; i++) {
		int value;
		char t;
		scanf("%d", &value);
		getchar();
		scanf("%c", &t);
		turn[0][i] = value;
		if (t == 'L') turn[1][i] = -1; //왼-> 1
		else turn[1][i] = 1; //오른쪽
	}
	int dir = 0;
	int head[2] = { 0, };
	int tail[2] = { 0, };
	int time = 0;
	struct deque* de_head = (struct deque*)malloc(sizeof(struct deque));
	struct deque* de_tail = (struct deque*)malloc(sizeof(struct deque));
	de_head->next = NULL;
	de_tail->next = NULL;
	push(de_head, de_tail, 0, 0);
	while (1) {
		time++;
		if (dir == 0) head[1]++;
		else if (dir == 1) head[0]++;
		else if (dir == 2) head[1]--;
		else if (dir == 3) head[0]--;
		push(de_head, de_tail, head[0], head[1]);
		if (head[0]<0 || head[0]>size - 1) break;
		if (head[1]<0 || head[1]>size - 1) break;
		if (arr[head[0]][head[1]] == 100) break;
		//사이즈 벗어나면, 끝
		if (arr[head[0]][head[1]] != 1) {
			if (de_head->next != NULL) arr[de_head->next->x][de_head->next->y] = 0;
			pop(de_head, de_tail);
		}

		arr[head[0]][head[1]] = 100; //뱀이 있는 곳= 100;
		if (time == turn[0][turn_idx] && turn_idx<K) {
			dir += turn[1][turn_idx];
			if (dir < 0) dir = 3;
			else {
				dir = dir % 4;
			}
			turn_idx++;
		}
	}
	printf("%d\n", time);
}
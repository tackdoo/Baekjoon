#pragma warning(disable:4996)
#include <stdio.h>
#include <stdlib.h>

struct queue {
	int value;
	struct queue* next;
};

void push(struct queue* head, struct queue* tail ,int value) {
	struct queue* newNode = (struct queue*)malloc(sizeof(struct queue));
	newNode->next = NULL;
	newNode->value = value;
	
	if (head->next == NULL) head->next = newNode;
	else tail->next->next = newNode;
	
	tail->next = newNode;
}

int pop(struct queue* head, struct queue* tail) {
	if (head->next == NULL) return -1;
	struct queue* newNode = head->next;
	int value = newNode->value;
	if (head->next == tail->next) {
		head->next = NULL;
		tail->next = NULL;
	}
	else head->next = head->next->next;
	free(newNode);
	return value;
}

void clear(struct queue* head, struct queue* tail) {
	tail->next = NULL;
	if (head->next == NULL) return;
	for (struct queue* i = head->next; head->next != NULL; i = head->next) {
		head->next = head->next->next;
		free(i);
	}

}

int over(struct queue* head) {
	if (head->next == NULL) return 0;
	int value = head->next->value;
	for (struct queue* i = head->next; i != NULL; i = i->next) {
		if (value < i->value) return 1;
	}
	return 0;
}

int main() {
	struct queue* head = (struct queue*)malloc(sizeof(struct queue));
	struct queue* tail = (struct queue*)malloc(sizeof(struct queue));
	head->next = NULL;
	tail->next = NULL;
	int T, idx;
	scanf("%d", &T);

	for (int i = 0; i < T; i++) {
		int num, value;
		scanf("%d %d", &num, &idx);
		
		for (int j = 0; j < num; j++) {
			scanf("%d", &value);
			push(head, tail, value);
		}
		int count = 0;
		while (1) {
			if (over(head)) { //우선순위가 높은게 있다면
				int value = pop(head, tail);
				push(head, tail, value);
			}
			else { // 우선순위가 높은게 없다면,
				if (pop(head, tail) != -1) {
					count++;
					num--;
				}
				if (idx == 0) {
					clear(head, tail);
					break;
				}
			}
			if (idx == 0) idx = num;
			idx--;
		}
		printf("%d\n", count);
	}

}